import { Task } from "../data-handling/task";
import { Storage } from "../data-handling/storage";
import { createTaskElement } from "./shared";

export function ProjectPage() {
  const pageHeader = document.getElementById("page-header");
  const tasklist = document.getElementById("tasklist");
  const newTaskBtn = document.getElementById("new-task-btn");

  let currentProject;
  let currentTasks;

  newTaskBtn.addEventListener("click", newTaskHandler);

  const publicMethods = {
    load: (project) => {
      currentProject = project;
      currentTasks = currentProject.getTasks();

      loadPage();
    },
  };

  return publicMethods;

  function loadPage() {
    clearPage();
    addHeader();
    addTasks();

    Storage.saveProjects();
  }

  function clearPage() {
    pageHeader.innerHTML = "";
    tasklist.innerHTML = "";
  }

  function addHeader() {
    pageHeader.innerHTML = currentProject.getTitle();
  }

  function addTasks() {
    if (currentTasks)
      for (const key in currentTasks) {
        tasklist.appendChild(createTaskElement(currentTasks[key]));
      }
  }

  function newTaskHandler() {
    const form = document.getElementById("new-task-form");
    const formTitle = document.getElementById("new-task-title");
    const formDescription = document.getElementById("new-task-description");
    const formDueDate = document.getElementById("new-task-due-date");
    const formPriority = document.getElementById("new-task-priority");
    const formCompleted = document.getElementById("new-task-completed");
    const formCancelBtn = document.getElementById("new-task-cancel");

    formCancelBtn.addEventListener("click", resetTaskHandler);
    form.addEventListener("submit", submitForm);

    form.style.display = "block";
    formTitle.focus();
    newTaskBtn.style.display = "none";

    function resetTaskHandler() {
      formCancelBtn.removeEventListener("click", resetTaskHandler);
      form.removeEventListener("submit", submitForm);

      form.style.display = "none";
      newTaskBtn.style.display = "inline";
      form.reset();
    }

    function submitForm() {
      currentProject.addTask(
        Task(
          formTitle.value,
          formDescription.value,
          formDueDate.value,
          formPriority.selectedIndex,
          formCompleted.checked,
        ),
      );

      resetTaskHandler();
      loadPage();
    }
  }
}
